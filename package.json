{
  "dependencies": {
    "@atomist/skill": "0.1.0-master.20200122123050",
    "@octokit/rest": "^16.37.0",
    "@types/promise-retry": "^1.1.3",
    "lodash": "^4.17.15",
    "promise-retry": "^1.1.1"
  },
  "devDependencies": {
    "@google-cloud/functions-framework": "^1.3.2",
    "@graphql-codegen/cli": "^1.11.2",
    "@graphql-codegen/typescript": "^1.11.2",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^5.2.7",
    "@types/power-assert": "^1.5.3",
    "espower-typescript": "^9.0.2",
    "mocha": "^7.0.0",
    "npm-run-all": "^4.1.5",
    "power-assert": "^1.6.1",
    "rimraf": "^3.0.0",
    "supervisor": "^0.12.0",
    "ts-node": "^8.6.2",
    "tslint": "^5.20.1",
    "typedoc": "^0.16.6",
    "typescript": "^3.7.4"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "autotest": "supervisor --watch index.ts,lib,test --extensions ts --no-restart-on exit --quiet --exec npm -- test",
    "build": "run-s compile test lint doc",
    "clean": "run-p clean:compile clean:test clean:doc clean:run",
    "clean:compile": "rimraf git-info.json \"*.{d.ts,js}{,.map}\" \"{lib,test}/**/*.{d.ts,js}{,.map}\" lib/typings/types.ts",
    "clean:dist": "run-s clean clean:npm",
    "clean:doc": "rimraf doc",
    "clean:npm": "rimraf node_modules",
    "clean:run": "rimraf *-v8.log profile.txt log",
    "clean:test": "rimraf .nyc_output coverage",
    "compile": "run-s gql:gen compile:ts",
    "compile:ts": "tsc --project .",
    "doc": "typedoc --mode modules --excludeExternals --ignoreCompilerErrors --exclude \"**/*.d.ts\" --out doc index.ts lib",
    "git:info": "atm-git-info",
    "gql:gen": "graphql-codegen",
    "lint": "tslint --config tslint.json --format verbose --project .",
    "lint:fix": "npm run lint -- --fix",
    "start": "functions-framework --target=sdm --signature-type=event",
    "test": "echo no tests",
    "test:one": "mocha --require espower-typescript/guess \"test/**/${TEST:-*.test.ts}\"",
    "typedoc": "npm run doc"
  },
  "engines": {
    "node": ">=8.2.0",
    "npm": ">=5.0.0"
  }
}
